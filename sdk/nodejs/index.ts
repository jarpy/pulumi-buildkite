// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export * from "./agentToken";
export * from "./getMetadata";
export * from "./getPipeline";
export * from "./pipeline";
export * from "./pipelineSchedule";
export * from "./provider";
export * from "./team";
export * from "./teamMember";

// Export sub-modules:
import * as config from "./config";
import * as types from "./types";

export {
    config,
    types,
};

// Import resources to register:
import { AgentToken } from "./agentToken";
import { Pipeline } from "./pipeline";
import { PipelineSchedule } from "./pipelineSchedule";
import { Team } from "./team";
import { TeamMember } from "./teamMember";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "buildkite:index/agentToken:AgentToken":
                return new AgentToken(name, <any>undefined, { urn })
            case "buildkite:index/pipeline:Pipeline":
                return new Pipeline(name, <any>undefined, { urn })
            case "buildkite:index/pipelineSchedule:PipelineSchedule":
                return new PipelineSchedule(name, <any>undefined, { urn })
            case "buildkite:index/team:Team":
                return new Team(name, <any>undefined, { urn })
            case "buildkite:index/teamMember:TeamMember":
                return new TeamMember(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("buildkite", "index/agentToken", _module)
pulumi.runtime.registerResourceModule("buildkite", "index/pipeline", _module)
pulumi.runtime.registerResourceModule("buildkite", "index/pipelineSchedule", _module)
pulumi.runtime.registerResourceModule("buildkite", "index/team", _module)
pulumi.runtime.registerResourceModule("buildkite", "index/teamMember", _module)

import { Provider } from "./provider";

pulumi.runtime.registerResourcePackage("buildkite", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:buildkite") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
